body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* 自定义样式 */
.min-h-screen {
  min-height: 100vh;
}

.bg-white {
  background-color: white;
}

.border-b {
  border-bottom-width: 1px;
}

.border-gray-200 {
  border-color: rgb(229 231 235);
}

.sticky {
  position: sticky;
}

.top-0 {
  top: 0px;
}

.z-50 {
  z-index: 50;
}

.max-w-4xl {
  max-width: 56rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.flex {
  display: flex;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-semibold {
  font-weight: 600;
}

.text-gray-900 {
  color: rgb(17 24 39);
}

.text-gray-600 {
  color: rgb(75 85 99);
}

.text-gray-500 {
  color: rgb(107 114 128);
}

.text-white {
  color: white;
}

.text-yellow-600 {
  color: rgb(202 138 4);
}

.text-yellow-800 {
  color: rgb(133 77 14);
}

.bg-blue-500 {
  background-color: rgb(59 130 246);
}

.hover\:bg-blue-600:hover {
  background-color: rgb(37 99 235);
}

.rounded-lg {
  border-radius: 0.5rem;
}

.font-medium {
  font-weight: 500;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.space-x-3 > * + * {
  margin-left: 0.75rem;
}

.space-x-8 > * + * {
  margin-left: 2rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.font-bold {
  font-weight: 700;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.font-medium {
  font-weight: 500;
}

.relative {
  position: relative;
}

.w-24 {
  width: 6rem;
}

.h-24 {
  height: 6rem;
}

.rounded-full {
  border-radius: 9999px;
}

.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.from-green-400 {
  --tw-gradient-from: #4ade80;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(74, 222, 128, 0));
}

.to-green-600 {
  --tw-gradient-to: #16a34a;
}

.overflow-hidden {
  overflow: hidden;
}

.w-20 {
  width: 5rem;
}

.h-20 {
  height: 5rem;
}

.w-16 {
  width: 4rem;
}

.h-16 {
  height: 4rem;
}

.bg-green-500 {
  background-color: rgb(34 197 94);
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.bg-yellow-50 {
  background-color: rgb(254 252 232);
}

.border {
  border-width: 1px;
}

.border-yellow-200 {
  border-color: rgb(254 240 138);
}

.rounded-lg {
  border-radius: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.rounded-full {
  border-radius: 9999px;
}

.h-8 {
  height: 2rem;
}

.w-8 {
  width: 2rem;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-blue-500 {
  border-color: rgb(59 130 246);
}

.grid {
  display: grid;
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.gap-1 {
  gap: 0.25rem;
}

.group {
  position: relative;
}

.cursor-pointer {
  cursor: pointer;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.absolute {
  position: absolute;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.bg-black {
  background-color: rgb(0 0 0);
}

.opacity-0 {
  opacity: 0;
}

.group:hover .group-hover\:opacity-30 {
  opacity: 0.3;
}

.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}

.group:hover .group-hover\:scale-105 {
  transform: scale(1.05);
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.w-full {
  width: 100%;
}

.h-full {
  height: 100%;
}

.object-cover {
  object-fit: cover;
}

.text-center {
  text-align: center;
}

.space-x-4 > * + * {
  margin-left: 1rem;
}

.space-x-1 > * + * {
  margin-left: 0.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.font-semibold {
  font-weight: 600;
}

.max-w-xs {
  max-width: 20rem;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* 模态框样式 */
.fixed {
  position: fixed;
}

.bg-opacity-75 {
  background-color: rgba(0, 0, 0, 0.75);
}

.max-h-full {
  max-height: 100%;
}

.max-h-\[80vh\] {
  max-height: 80vh;
}

.object-contain {
  object-fit: contain;
}

.bg-gradient-to-t {
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.from-black {
  --tw-gradient-from: #000000;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
}

.to-transparent {
  --tw-gradient-to: transparent;
}

.p-6 {
  padding: 1.5rem;
}

.opacity-90 {
  opacity: 0.9;
}

.bg-gray-50 {
  background-color: rgb(249 250 251);
}

.bg-gray-500 {
  background-color: rgb(107 114 128);
}

.hover\:bg-gray-600:hover {
  background-color: rgb(75 85 99);
}

.bg-green-500 {
  background-color: rgb(34 197 94);
}

.hover\:bg-green-600:hover {
  background-color: rgb(22 163 74);
}

.top-4 {
  top: 1rem;
}

.right-4 {
  right: 1rem;
}

.w-10 {
  width: 2.5rem;
}

.h-10 {
  height: 2.5rem;
}

.hover\:bg-opacity-70:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
